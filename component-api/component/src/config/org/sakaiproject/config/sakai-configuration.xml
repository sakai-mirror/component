<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- An abstract parent SakaiProperties is used to set up defaults. -->
	<bean id="org.sakaiproject.component.DefaultSakaiProperties" abstract="true" class="org.sakaiproject.util.SakaiProperties">
		<property name="properties">
			<bean class="org.sakaiproject.component.impl.DynamicDefaultSakaiProperties" init-method="init"/>
		</property>

		<property name="locations">
			<list>
				<value>classpath:/org/sakaiproject/config/sakai.properties</value>
			</list>
		</property>

		<!--
			The standard singleton SakaiProperties should override any component-set properties, but can
			themselves be overridden or preceded by another instance of the class.
		 -->
		<property name="order" value="1"/>
	</bean>

	<!-- Certain Sakai properties need to be exposed as Java system properties to support legacy code. -->
	<bean id="org.sakaiproject.component.SakaiPropertyPromoter" class="org.sakaiproject.util.SakaiPropertyPromoter" init-method="init">
		<property name="sakaiProperties" ref="org.sakaiproject.component.SakaiProperties"/>
		<property name="sakaiPropertyToSystemPropertyMap">
			<map>
				<entry key="serverId" value="sakai.serverId"/>
				<entry key="content.upload.max" value="sakai.content.upload.max"/>
				<entry key="content.upload.ceiling" value="sakai.content.upload.ceiling"/>
				<entry key="content.upload.dir" value="sakai.content.upload.dir"/>
				<entry key="force.url.secure" value="sakai.force.url.secure"/>
			</map>
		</property>
	</bean>

	<!--
		The "${sakai.home}/sakai-configuration.xml" file can override this bean to change which properties
		files are read, or to plug a DB-backed or JMX-backed properties factory bean into the "properties"
		slot.
		
		However, if you do overwrite the SakaiProperties bean, make sure to include the "parent" attribute!
	-->
	<bean id="org.sakaiproject.component.SakaiProperties" parent="org.sakaiproject.component.DefaultSakaiProperties">
		<property name="locations">
			<list merge="true">
				<value>file:${sakai.home}placeholder.properties</value>
				<value>file:${sakai.home}sakai.properties</value>
				<value>file:${sakai.home}local.properties</value>
				<value>file:${sakai.security}security.properties</value>
			</list>
		</property>
	</bean>

</beans>
